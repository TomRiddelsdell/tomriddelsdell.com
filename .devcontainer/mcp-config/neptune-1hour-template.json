{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Auto-shutdown Neptune cluster for 1-hour testing sessions - tomriddelsdell.com",
  "Parameters": {
    "ClusterIdentifier": {
      "Type": "String",
      "Default": "tomriddelsdell-neptune-test-1h",
      "Description": "Identifier for the temporary Neptune cluster"
    },
    "SessionDurationMinutes": {
      "Type": "Number",
      "Default": 60,
      "Description": "Auto-shutdown after this many minutes"
    },
    "TestingEmail": {
      "Type": "String",
      "Description": "Email for notifications",
      "Default": "tom@tomriddelsdell.com"
    }
  },
  "Resources": {
    "AutoShutdownRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "NeptuneAutoShutdown",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "neptune:DeleteDBCluster",
                    "neptune:DeleteDBInstance",
                    "neptune:DescribeDBClusters",
                    "neptune:DescribeDBInstances",
                    "cloudformation:DeleteStack",
                    "sns:Publish"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ShutdownNotificationTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "neptune-auto-shutdown",
        "Subscription": [
          {
            "Protocol": "email",
            "Endpoint": {"Ref": "TestingEmail"}
          }
        ]
      }
    },
    "AutoShutdownFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "neptune-auto-shutdown",
        "Runtime": "python3.9",
        "Handler": "index.lambda_handler",
        "Role": {"Fn::GetAtt": ["AutoShutdownRole", "Arn"]},
        "Environment": {
          "Variables": {
            "CLUSTER_IDENTIFIER": {"Ref": "ClusterIdentifier"},
            "STACK_NAME": {"Ref": "AWS::StackName"},
            "SNS_TOPIC_ARN": {"Ref": "ShutdownNotificationTopic"}
          }
        },
        "Code": {
          "ZipFile": {
            "Fn::Sub": |
              import boto3
              import json
              import os
              
              def lambda_handler(event, context):
                  neptune = boto3.client('neptune')
                  cf = boto3.client('cloudformation')
                  sns = boto3.client('sns')
                  
                  cluster_id = os.environ['CLUSTER_IDENTIFIER']
                  stack_name = os.environ['STACK_NAME']
                  sns_topic = os.environ['SNS_TOPIC_ARN']
                  
                  try:
                      print(f"Starting auto-shutdown for cluster: {cluster_id}")
                      
                      # Get cluster instances
                      response = neptune.describe_db_clusters(DBClusterIdentifier=cluster_id)
                      cluster = response['DBClusters'][0]
                      
                      # Delete instances first
                      for member in cluster['DBClusterMembers']:
                          instance_id = member['DBInstanceIdentifier']
                          print(f"Deleting instance: {instance_id}")
                          neptune.delete_db_instance(
                              DBInstanceIdentifier=instance_id,
                              SkipFinalSnapshot=True
                          )
                      
                      # Wait a moment then delete cluster
                      import time
                      time.sleep(30)
                      
                      print(f"Deleting cluster: {cluster_id}")
                      neptune.delete_db_cluster(
                          DBClusterIdentifier=cluster_id,
                          SkipFinalSnapshot=True
                      )
                      
                      # Send notification
                      message = f"""
                      Neptune cluster auto-shutdown completed!
                      
                      Cluster: {cluster_id}
                      Time: {context.aws_request_id}
                      Stack: {stack_name}
                      
                      The 1-hour testing session has ended.
                      All Neptune resources have been deleted to prevent further charges.
                      """
                      
                      sns.publish(
                          TopicArn=sns_topic,
                          Subject="Neptune Auto-Shutdown Complete",
                          Message=message
                      )
                      
                      print("Auto-shutdown completed successfully")
                      return {
                          'statusCode': 200,
                          'body': json.dumps('Auto-shutdown completed')
                      }
                      
                  except Exception as e:
                      print(f"Error during auto-shutdown: {str(e)}")
                      sns.publish(
                          TopicArn=sns_topic,
                          Subject="Neptune Auto-Shutdown ERROR",
                          Message=f"Error shutting down {cluster_id}: {str(e)}"
                      )
                      raise e
          }
        }
      }
    },
    "ShutdownScheduleRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Trigger Neptune auto-shutdown after 1 hour",
        "ScheduleExpression": {"Fn::Sub": "rate(${SessionDurationMinutes} minutes)"},
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {"Fn::GetAtt": ["AutoShutdownFunction", "Arn"]},
            "Id": "NeptuneAutoShutdownTarget"
          }
        ]
      }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {"Ref": "AutoShutdownFunction"},
        "Principal": "events.amazonaws.com",
        "SourceArn": {"Fn::GetAtt": ["ShutdownScheduleRule", "Arn"]}
      }
    },
    "NeptuneSubnetGroup": {
      "Type": "AWS::Neptune::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for 1-hour Neptune testing",
        "SubnetIds": [
          {"Ref": "PrivateSubnet1"},
          {"Ref": "PrivateSubnet2"}
        ]
      }
    },
    "NeptuneSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for 1-hour Neptune testing",
        "VpcId": {"Ref": "VPC"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 8182,
            "ToPort": 8182,
            "CidrIp": "10.0.0.0/16"
          }
        ]
      }
    },
    "NeptuneCluster": {
      "Type": "AWS::Neptune::DBCluster",
      "Properties": {
        "DBClusterIdentifier": {"Ref": "ClusterIdentifier"},
        "Engine": "neptune",
        "EngineVersion": "1.3.2.1",
        "DBSubnetGroupName": {"Ref": "NeptuneSubnetGroup"},
        "VpcSecurityGroupIds": [
          {"Ref": "NeptuneSecurityGroup"}
        ],
        "StorageEncrypted": false,
        "BackupRetentionPeriod": 1,
        "DeletionProtection": false,
        "Tags": [
          {
            "Key": "Purpose",
            "Value": "1-hour-testing"
          },
          {
            "Key": "AutoShutdown",
            "Value": "true"
          },
          {
            "Key": "Project",
            "Value": "tomriddelsdell.com"
          }
        ]
      }
    },
    "NeptuneInstance": {
      "Type": "AWS::Neptune::DBInstance",
      "Properties": {
        "DBInstanceIdentifier": {"Fn::Sub": "${ClusterIdentifier}-instance"},
        "DBInstanceClass": "db.t3.medium",
        "Engine": "neptune",
        "DBClusterIdentifier": {"Ref": "NeptuneCluster"},
        "Tags": [
          {
            "Key": "Purpose",
            "Value": "1-hour-testing"
          },
          {
            "Key": "AutoShutdown",
            "Value": "true"
          }
        ]
      }
    }
  },
  "Outputs": {
    "NeptuneClusterEndpoint": {
      "Description": "Neptune cluster endpoint (available for 1 hour)",
      "Value": {"Fn::GetAtt": ["NeptuneCluster", "Endpoint"]}
    },
    "TestingDuration": {
      "Description": "Testing session duration",
      "Value": {"Fn::Sub": "${SessionDurationMinutes} minutes"}
    },
    "EstimatedCost": {
      "Description": "Estimated cost for this session",
      "Value": {"Fn::Sub": "$${SessionDurationMinutes} * 0.00123 = $${SessionDurationMinutes * 0.00123}"}
    },
    "AutoShutdownTime": {
      "Description": "Cluster will auto-shutdown at approximately",
      "Value": {"Fn::Sub": "Stack creation time + ${SessionDurationMinutes} minutes"}
    }
  }
}
