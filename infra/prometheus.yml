# Prometheus Configuration for Portfolio Platform
# Development configuration with 15s scrape intervals

global:
  scrape_interval: 15s # Default scrape interval
  evaluation_interval: 15s # Evaluation interval for recording rules
  external_labels:
    cluster: 'development'
    environment: 'local'

# Alertmanager configuration (optional)
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           - alertmanager:9093

# Load rules once and periodically evaluate them
# rule_files:
#   - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          environment: 'local'

  # Jaeger metrics
  - job_name: 'jaeger'
    scrape_interval: 15s
    static_configs:
      - targets: ['jaeger:14269']
        labels:
          service: 'jaeger'
          environment: 'local'

  # Landing page API metrics
  - job_name: 'landing-page'
    scrape_interval: 15s
    metrics_path: '/api/metrics'
    static_configs:
      - targets: ['host.docker.internal:3000']
        labels:
          service: 'landing-page'
          environment: 'local'
          app: 'frontend'

  # Cloudflare Workers API metrics (when deployed)
  - job_name: 'api-workers'
    scrape_interval: 30s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['localhost:8787']
        labels:
          service: 'api-workers'
          environment: 'local'
          app: 'api'
    # Only scrape if the target is available
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: localhost:8787

  # Portfolio service metrics (future)
  - job_name: 'portfolio-service'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets: []  # Add when service is deployed
        labels:
          service: 'portfolio-service'
          environment: 'local'

  # Accounts service metrics (future)
  - job_name: 'accounts-service'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets: []  # Add when service is deployed
        labels:
          service: 'accounts-service'
          environment: 'local'

  # Admin service metrics (future)
  - job_name: 'admin-service'
    scrape_interval: 15s
    metrics_path: '/metrics'
    static_configs:
      - targets: []  # Add when service is deployed
        labels:
          service: 'admin-service'
          environment: 'local'

# Remote write configuration for Grafana Cloud (optional)
# Uncomment and configure when using Grafana Cloud
# remote_write:
#   - url: https://prometheus-prod-XX-prod-us-central-0.grafana.net/api/prom/push
#     basic_auth:
#       username: 'XXXXX'
#       password: '${GRAFANA_CLOUD_API_KEY}'
#     queue_config:
#       capacity: 10000
#       max_shards: 200
#       min_shards: 1
#       max_samples_per_send: 5000
#       batch_send_deadline: 5s
#       min_backoff: 30ms
#       max_backoff: 100ms
