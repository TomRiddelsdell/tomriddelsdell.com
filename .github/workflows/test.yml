name: Test

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        required: false
        default: "20"
        type: string
      coverage-threshold:
        description: "Code coverage threshold percentage"
        required: false
        default: 80
        type: number

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit
        env:
          CI: true

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Check coverage threshold
        run: |
          COVERAGE=$(npm run test:coverage:check 2>/dev/null | grep -o '[0-9]*%' | head -1 | sed 's/%//')
          if [ "$COVERAGE" -lt "${{ inputs.coverage-threshold }}" ]; then
            echo "❌ Coverage $COVERAGE% is below threshold ${{ inputs.coverage-threshold }}%"
            exit 1
          else
            echo "✅ Coverage $COVERAGE% meets threshold ${{ inputs.coverage-threshold }}%"
          fi

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: doppler run -- npm run test:integration
        env:
          CI: true
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_CI }}

  contract-tests:
    name: Contract Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run contract tests
        run: npm run test:contract
        env:
          CI: true

      - name: Publish contract test results
        if: always()
        run: npm run test:contract:publish
